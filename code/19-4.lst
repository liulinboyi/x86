     1                                  ;包含代码段、数据段、栈段的用户程序
     2                                  ;===============================================================================
     3                                  SECTION header vstart=0                     ;定义用户程序头部段
     4                                      ;伪指令dd声明和初始化一个双字，一个32位的数据
     5                                      ;16位数据不足以表示65535以上的数值，所以使用双字记录
     6 00000000 [00000000]                  program_length  dd program_end          ;程序总长度[0x00]
     7                                  
     8                                      ;用户程序入口点
     9 00000004 [0000]                      code_entry      dw start                ;偏移地址[0x04]
    10 00000006 [00000000]                                  dd section.code.start ;段地址[0x06]
    11                                  
    12 0000000A 0300                        realloc_tbl_len dw (segtbl_end-segtbl_begin)/4
    13                                                                              ;段重定位表项个数[0x0a]
    14                                                                              ;dd双字,每个表项为4个字节
    15                                  
    16                                      ;段重定位表
    17                                      segtbl_begin:
    18 0000000C [00000000]                  code_segment  dd section.code.start ;[0x0c]
    19 00000010 [00000000]                  data_segment  dd section.data.start ;[0x10]
    20 00000014 [00000000]                  stack_segment   dd section.stack.start  ;[0x14]
    21                                      segtbl_end:
    22                                  
    23                                  ;===============================================================================
    24                                  SECTION code align=16 vstart=0         ;定义代码段1（16字节对齐）
    25                                    start:
    26                                           ;初始执行时，DS和ES指向用户程序头部段
    27 00000000 A1[1400]                         mov ax,[stack_segment]           ;设置到用户程序自己的堆栈
    28 00000003 8ED0                             mov ss,ax
    29 00000005 BC[0001]                         mov sp,stack_pointer
    30                                  
    31 00000008 A1[1000]                         mov ax,[data_segment]          ;设置到用户程序自己的数据段
    32 0000000B 8ED8                             mov ds,ax
    33                                  
    34 0000000D B800B8                           mov ax,0xb800
    35 00000010 8EC0                             mov es,ax
    36                                  
    37 00000012 BE[0000]                         mov si,message
    38 00000015 BF0000                           mov di,0
    39                                    next:
    40 00000018 8A04                             mov al,[si]
    41 0000001A 3C00                             cmp al,0
    42 0000001C 740E                             je exit
    43 0000001E 268805                           mov byte [es:di],al
    44 00000021 26C6450107                       mov byte [es:di+1],0x07
    45 00000026 46                               inc si
    46 00000027 83C702                           add di,2
    47 0000002A EBEC                             jmp next
    48                                    exit:
    49 0000002C EBFE                             jmp $
    50                                           
    51                                  ;===============================================================================
    52                                  SECTION data align=16 vstart=0
    53                                  message:
    54 00000000 68656C6C6F20776F72-             db 'hello world.',0
    54 00000009 6C642E00           
    55                                  ;===============================================================================
    56                                  SECTION stack align=16 vstart=0
    57 00000000 <res 100h>                      resb 256
    57          ******************       warning: uninitialized space declared in stack section: zeroing [-w+zeroing]
    58                                  stack_pointer:
    59                                  
    60                                  ;===============================================================================
    61                                  SECTION trail align=16
    62                                  ;没有vstart语句，
    63                                  ;所以标号program_end的汇编地址是从整个程序的开头计算的
    64                                  ;program_end长度为整个程序的长度
    65                                  program_end:
