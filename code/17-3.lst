     1                                  ;从1加到100
     2                                  s: ;开始标号
     3 00000000 EB0E                          jmp start
     4 00000002 312B322B332B2E2E2E-     message db '1+2+3+...+100=' ;字符串等同于db '1','+','2'...
     4 0000000B 2B3130303D         
     5                                  ;message代表这一行的汇编地址
     6                                  ; 传送准备阶段
     7                                  ; ds:si 原始数据串的段地址:偏移地址
     8                                  ; es:di 目标位置的段地址:偏移地址
     9                                  
    10                                  start:
    11 00000010 B8C007                        mov ax,0x7c0 ;设置数据段的段基地址
    12 00000013 8ED8                          mov ds,ax
    13                                  
    14 00000015 B800B8                        mov ax,0xb800 ;设置附加段的段基地址到显示缓冲区
    15 00000018 8EC0                          mov es,ax
    16                                  
    17                                        ;显示字符
    18 0000001A BE[0200]                      mov si,message
    19 0000001D BF0000                        mov di,0
    20 00000020 B90E00                        mov cx,start - message ;循环次数
    21                                  showmsg:
    22 00000023 8A04                          mov al,[si] ;将si对应的数据(字符)传送到al寄存器
    23 00000025 268805                        mov [es:di],al ;将al寄存器的值，传送给显存缓冲区
    24 00000028 47                            inc di ;di偏移地址+1向后面移动一个字节
    25 00000029 26C60507                      mov byte [es:di],0x07 ;为字符设置显示属性颜色等数据
    26 0000002D 47                            inc di ;di偏移地址+1向后面移动一个字节，为下一个字节空间放置字符做准备
    27 0000002E 46                            inc si ;si +1获取下一个字符
    28 0000002F E2F2                          loop showmsg
    29                                  
    30                                        ;计算1到100的和
    31 00000031 31C0                          xor ax,ax ;ax用于存储累加结果，异或指令清零
    32 00000033 B90100                        mov cx,1
    33                                  summate:
    34 00000036 01C8                          add ax,cx
    35 00000038 41                            inc cx
    36 00000039 83F964                        cmp cx,100 ;cx与100进行比较
    37 0000003C 7EF8                          jle summate ;如果小于等于则跳转
    38                                  
    39                                        ;分解各个数位
    40 0000003E 31C9                          xor cx,cx ;设置栈段基地址
    41 00000040 8ED1                          mov ss,cx
    42 00000042 89CC                          mov sp,cx
    43                                  
    44 00000044 BB0A00                        mov bx,10
    45 00000047 31C9                          xor cx,cx ;记录实际分解了几个数位
    46                                  decompo:
    47 00000049 41                            inc cx
    48 0000004A 31D2                          xor dx,dx
    49 0000004C F7F3                          div bx
    50 0000004E 80C230                        add dl,0x30
    51 00000051 52                            push dx ;16位8086处理器中，压栈出栈必须为一个字，不能为一个字节
    52 00000052 83F800                        cmp ax,0 ;如果商为0，则结束
    53 00000055 75F2                          jne decompo
    54                                  
    55                                        ;以下显示各个数位
    56                                  shownum:
    57 00000057 5A                            pop dx
    58 00000058 268815                        mov [es:di],dl
    59 0000005B 47                            inc di
    60 0000005C 26C60507                      mov byte [es:di],0x07
    61 00000060 47                            inc di
    62 00000061 E2F4                          loop shownum
    63                                  
    64 00000063 EBFE                          jmp $
    65                                  
    66                                  e: ;结束标号
    67 00000065 00<rep 199h>                   times 510 - (e - s) db 0
    68 000001FE 55AA                           db 0x55, 0xaa
    69                                  
