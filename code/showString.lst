     1                                  ; 文本内容和显示指令分开
     2                                  ;专门定义一个存放字符串的数据区
     3                                  
     4                                  ; 标号 字符, 字符颜色
     5 00000000 EB1A                    jmp start ; 跳过这些数据，到start标号处执行指令
     6 00000002 4C076107620765076C-     mytext db 'L', 0x07, 'a', 0x07, 'b', 0x07, 'e', 0x07, 'l', 0x07, ' ', 0x07, 'o', 0x07,          'f', 0x07, 'f', 0x07, 's', 0x07, 'e', 0x07, 't', 0x07, ':', 0x07
     6 0000000B 0720076F0766076607-
     6 00000014 7307650774073A07   
     8                                  start:
     9 0000001C B8C007                        mov ax, 0x7c0 ;设置数据段寄存器内容 设置一个新的段逻辑地址起始为0x7c0:0000，为了简化后面程序的设计
    10 0000001F 8ED8                          mov ds, ax
    11                                  
    12 00000021 B800B8                        mov ax, 0xb800 ;设置附加段寄存器内容
    13 00000024 8EC0                          mov es, ax
    14                                  
    15                                        ; 数据串传送指令
    16                                        ; movsb 按字节传送
    17                                        ; movsw 按字传送
    18                                  
    19                                        ; 传送准备阶段
    20                                        ; ds:si 原始数据串的段地址:偏移地址
    21                                        ; es:di 目标位置的段地址:偏移地址
    22                                  
    23 00000026 FC                            cld ; 方向指令清零指令，以指示是正方向的，无操作数指令，与之相反的是std置方向指令 ，与cld方向相反
    24 00000027 BE[0200]                      mov si, mytext
    25 0000002A BF0000                        mov di, 0
    26                                        ; flages 标志寄存器 16位寄存器，每一个位有一个特定含义的标志，比如位10是方向标志DF
    27 0000002D B90D00                        mov cx,(start-mytext)/2
    28 00000030 F3A5                          rep movsw ; 传送只能执行一次，如果需要反复执行，需要加上rep,，重复的次数由cx寄存器来指定
    29                                        ;传送后，movsw传送的是字，是16个二进制位，si与di都同时+2
    30                                        ;得到符号所代表的汇编地址
    31 00000032 B8[5D00]                      mov ax, number
    32                                  
    33                                  
    34                                        ;分解各个数位
    35 00000035 89C3                          mov bx,ax
    36 00000037 B90500                        mov cx,5 ;循环次数
    37 0000003A BE0A00                        mov si,10 ;除数
    38                                  
    39                                  digit:
    40 0000003D 31D2                          xor dx,dx ;重置dx
    41 0000003F F7F6                          div si
    42 00000041 8817                          mov [bx], dl ;保留数位（余数）
    43 00000043 43                            inc bx
    44 00000044 E2F7                          loop digit
    45                                  
    46                                        ;开始展示各个数位
    47 00000046 BB[5D00]                      mov bx, number ;将存有各个数位的首地址存储到bx 基址寄存器
    48 00000049 BE0400                        mov si, 4; 0,0,0,0,0 -> 4 整体是0-4 想要从后往前
    49                                  show:
    50                                       ;这里si被称为Index Register索引寄存器或者变址寄存器，另一个变址寄存器是di
    51 0000004C 8A00                          mov al, [bx+si];bx不变，通过si变化访问地址数据
    52                                        ;bx存放的是基地址，是标号number后面，第一个数位的偏移地址
    53                                        ;加上si的索引值之后，就可以访问其他数位的偏移地址
    54 0000004E 0430                          add al, 0x30 ;行成字符编码
    55 00000050 B404                          mov ah, 0x04 ;字符颜色属性
    56 00000052 268905                        mov [es:di], ax
    57 00000055 83C702                        add di, 2
    58 00000058 4E                            dec si ;递减，指向前一个数位
    59                                        ;jns条件转移指令 处理器执行它时，要参考标志寄存器的sf为，即标志位
    60 00000059 79F1                          jns show ;jns条件转移指令 如果标志寄存器（flags）的标志位符号为不是1，
    61                                        ;则跳转到标号show处执行
    62                                        ;当si的值一值-1结果为-1时，标志寄存器（flags）的标志位置1
    63                                        ;此时不满足jns指令要求，会向下执行语句
    64                                  
    65 0000005B EBFE                          jmp $
    66                                  
    67 0000005D 0000000000              number db 0,0,0,0,0
    68                                  
    69                                        ; $ 当前行的汇编地址；$$当前段的起始汇编地址
    70 00000062 00<rep 19Ch>                  times 510 - ($ - $$) db 0
    71 000001FE 55AA                          db 0x55, 0xAA
    72                                  
    73                                  
